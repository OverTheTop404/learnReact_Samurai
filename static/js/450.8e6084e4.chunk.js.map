{"version":3,"file":"static/js/450.8e6084e4.chunk.js","mappings":"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","sources":["components/hoc/authRedirect.js","webpack://it-kamasutra-1/./src/components/pages/profile/profileInfo/_profileInfo.module.scss?f969","components/pages/profile/profileInfo/userStatus.js","components/pages/profile/profileInfo/profileInfo.js","components/pages/profile/posts/post/_singlepost.module.scss","components/pages/profile/posts/post/singlepost.js","webpack://it-kamasutra-1/./src/components/pages/profile/posts/_posts.module.scss?5a5e","components/pages/profile/posts/postsContainer.js","components/pages/profile/profile.js","components/pages/profile/profileContainer.js"],"sourcesContent":["import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateAuthToProps = state => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nconst withAuthRedirect = Component => {\r\n\r\n    const RedirectComponent = props => {\r\n        if (!props.isAuth) return <Navigate to=\"/login\"/>\r\n        return <Component {...props} />\r\n    }\r\n\r\n    return connect(mapStateAuthToProps)(RedirectComponent)\r\n}\r\n\r\nexport default withAuthRedirect","// extracted by mini-css-extract-plugin\nexport default {\"topImage\":\"_profileInfo_topImage__yJBBX\",\"aboutUser\":\"_profileInfo_aboutUser__ACbUK\",\"avatar\":\"_profileInfo_avatar__DaGNt\",\"info\":\"_profileInfo_info__KHYe6\",\"personName\":\"_profileInfo_personName__1vwiz\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst UserStatue = props => {\r\n\r\n    let [statusModified, setStatusModified] = useState(false)\r\n    let [newStatus, setNewStatus] = useState(props.statusText)\r\n\r\n    useEffect(() => {\r\n        setNewStatus(props.statusText)\r\n    }, [props.statusText])\r\n\r\n    const modifiedStatus = () => {\r\n        setStatusModified(true)\r\n    }\r\n\r\n    const unmodifiedStatus = () => {\r\n        setStatusModified(false)\r\n        props.updateStatus(newStatus)\r\n    }\r\n\r\n    const onChangeStatus = (e) => {\r\n        setNewStatus(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!statusModified && <span onClick={modifiedStatus}>{newStatus || '--------'}</span>}\r\n            {statusModified && <input onChange={onChangeStatus} onBlur={unmodifiedStatus} autoFocus={true} value={newStatus}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserStatue\r\n\r\n","import style from './_profileInfo.module.scss'\r\nimport Preloader from \"../../../common/preloader/preloader\";\r\nimport UserStatus from \"./userStatus\"\r\n\r\nconst ProfileInfo = ({userInfo, status, updateUserStatus}) => {\r\n    if (!userInfo) return <Preloader/>\r\n    return (\r\n        <div>\r\n            <div className={style.aboutUser}>\r\n                <div className={style.avatar}>\r\n                    <img\r\n                        src={userInfo.photos.large\r\n                            ? userInfo.photos.large\r\n                            : 'https://w7.pngwing.com/pngs/862/646/png-transparent-beard-hipster-male-man-avatars-xmas-giveaway-icon-thumbnail.png'}\r\n                        alt=\"avatar\"/>\r\n                </div>\r\n                <div className={style.info}>\r\n                    <h4 className={style.personName}>{userInfo.fullName}</h4>\r\n                    <UserStatus statusText={status} updateStatus={updateUserStatus} />\r\n                    <span>{userInfo.aboutMe == null ? '' : userInfo.aboutMe}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","// extracted by mini-css-extract-plugin\nexport default {};","import style from './_singlepost.module.scss'\r\n\r\nconst SinglePost = props => {\r\n    return(\r\n        <div className={style.posts}>\r\n            <div>{props.message}. Likes:{props.likeCount}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SinglePost","// extracted by mini-css-extract-plugin\nexport default {\"enterPost\":\"_posts_enterPost__60xYu\"};","import {addPost} from \"../../../../redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport SinglePost from \"./post/singlepost\";\r\nimport style from \"./_posts.module.scss\";\r\nimport {Field, reduxForm, reset} from \"redux-form\";\r\nimport {Element} from \"../../../common/formControl/formControl\";\r\nimport {maxLength, required} from \"../../../utils/validation\";\r\nimport React from \"react\";\r\nimport {compose} from \"redux\";\r\n\r\nconst maxLength30 = maxLength(30)\r\nconst Textarea = Element('textarea')\r\n\r\nconst PostForm = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name={'post'} type='text' cols=\"100\" rows=\"5\" component={Textarea} fieldType={'textarea'}\r\n                   validate={[required, maxLength30]} placeholder='Write the post'/>\r\n            <button>Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst PostReduxForm = reduxForm({form: 'posts'})(PostForm)\r\n\r\nconst Posts = ({addPost, reset, profilePosts}) => {\r\n\r\n    let post = [...profilePosts].reverse().map(post => {\r\n        return <SinglePost message={post.message} likeCount={post.likeCount} key={post.id}/>\r\n    })\r\n\r\n    const addPostSubmit = dataForm => {\r\n        addPost(dataForm.post)\r\n        reset('posts')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={style.enterPost}>\r\n                <PostReduxForm onSubmit={addPostSubmit}/>\r\n            </div>\r\n            {post}\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = state => ({\r\n    profilePosts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addPost, reset}),\r\n    React.memo\r\n)(Posts)","import ProfileInfo from \"./profileInfo/profileInfo\";\r\nimport PostsContainer from \"./posts/postsContainer\";\r\n\r\nconst Profile = props => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo {...props} />\r\n            <PostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\nimport Profile from \"./profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {setUserStatus, updateUserStatus, userPageInfo} from \"../../../redux/profileReducer\";\r\nimport {useParams, Navigate} from 'react-router-dom'\r\nimport withAuthRedirect from \"../../hoc/authRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nexport function withRouter(Children){\r\n    return props => {\r\n        const match  = {params: useParams()};\r\n        return <Children {...props}  match={match}/>\r\n    }\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.id\r\n        if( !userId ) userId = this.props.userId\r\n        this.props.userPageInfo(userId)\r\n        this.props.setUserStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.isAuth && !this.props.match.params.id ) return <Navigate to={'/login'} />\r\n        return <Profile {...this.props} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => ({\r\n    userInfo: state.profilePage.userInfo,\r\n    status: state.profilePage.status,\r\n    userId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {userPageInfo, setUserStatus, updateUserStatus}),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer)"],"names":["mapStateAuthToProps","state","isAuth","auth","Component","connect","props","to","useState","statusModified","setStatusModified","statusText","newStatus","setNewStatus","useEffect","onClick","onChange","e","target","value","onBlur","updateStatus","autoFocus","userInfo","status","updateUserStatus","className","style","src","photos","large","alt","fullName","aboutMe","message","likeCount","maxLength30","maxLength","Textarea","Element","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","name","type","cols","rows","component","fieldType","validate","required","placeholder","compose","profilePosts","profilePage","posts","newPostText","addPost","reset","React","post","reverse","map","id","dataForm","withRouter","Children","match","params","useParams","ProfileContainer","userId","this","userPageInfo","setUserStatus"],"sourceRoot":""}